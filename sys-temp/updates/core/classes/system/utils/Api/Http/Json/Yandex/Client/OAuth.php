<?php
 namespace UmiCms\Classes\System\Utils\Api\Http\Json\Yandex\Client;use Psr\Http\Message\RequestInterface;use Psr\Http\Message\ResponseInterface;use UmiCms\Classes\System\Utils\Api\Http\Client;use UmiCms\Classes\System\Utils\Api\Http\Exception;use UmiCms\Utils\Logger\iFactory as iLoggerFactory;class OAuth extends Client implements iOAuth {const SERVICE_HOST = 'https://oauth.yandex.ru/';private $login;private $password;public function __construct(iLoggerFactory $v7c04afd48a735990b1eb450ae0110c68, \iConfiguration $vccd1066343c95877b75b79d47c36bebe) {$this->initLogger($v7c04afd48a735990b1eb450ae0110c68, $vccd1066343c95877b75b79d47c36bebe);$v54ebd3fd5407718f9cf38963a09f2324 = $vccd1066343c95877b75b79d47c36bebe->get('debug', 'enabled');$this->setKeepLog($v54ebd3fd5407718f9cf38963a09f2324);$this->initHttpClient();}public function setAuth($vd56b699830e77ba53855679cb1d252da, $v5f4dcc3b5aa765d61d8327deb882cf99) {$this->login = $vd56b699830e77ba53855679cb1d252da;$this->password = $v5f4dcc3b5aa765d61d8327deb882cf99;return $this;}public function getTokenByUserCode($vc13367945d5d4c91047b3b50234aa7ab) {$v10573b873d2fa5a365d558a45e328e47 = $this->createPostRequest([    'grant_type' => 'authorization_code',    'code' => $vc13367945d5d4c91047b3b50234aa7ab,   ], [    'token'   ]);$vd1fc8eaf36937be0c3ba8cfe0a2c1bfe = $this->getResponse($v10573b873d2fa5a365d558a45e328e47);if (!isset($vd1fc8eaf36937be0c3ba8cfe0a2c1bfe['access_token'])) {throw new Exception\BadResponse('Yandex.OAuth client error', 1);}return $vd1fc8eaf36937be0c3ba8cfe0a2c1bfe['access_token'];}protected function getLogDirectory() {return 'YandexOAuth';}protected function buildPath(array $v1bbcb648e0b1869444f3a2d344a5b3ac = []) {$vd6fe1d0be6347b8ef2427fa629c04485 = parent::buildPath($v1bbcb648e0b1869444f3a2d344a5b3ac);return rtrim($vd6fe1d0be6347b8ef2427fa629c04485, '/');}protected function getDefaultHeaders() {return array_merge([    'Authorization' => 'Basic ' . base64_encode($this->getLogin() . ':' . $this->getPassword()),    'Content-Type' => 'application/x-www-form-urlencoded',    'Accept' => 'application/json',   ]);}protected function encodePostData($v8d777f385d3dfec8815d20f7496026dc) {return http_build_query($v8d777f385d3dfec8815d20f7496026dc, '', '&');}protected function getResponseBody(ResponseInterface $vd1fc8eaf36937be0c3ba8cfe0a2c1bfe) {$v1a2567345bba0c62a6859cb5030ec65e = parent::getResponseBody($vd1fc8eaf36937be0c3ba8cfe0a2c1bfe);return empty($v1a2567345bba0c62a6859cb5030ec65e) ? [] : $this->parseJson($v1a2567345bba0c62a6859cb5030ec65e);}protected function getResponse(RequestInterface $v10573b873d2fa5a365d558a45e328e47) {$vd1fc8eaf36937be0c3ba8cfe0a2c1bfe = $this->send($v10573b873d2fa5a365d558a45e328e47);$this->log($v10573b873d2fa5a365d558a45e328e47, $vd1fc8eaf36937be0c3ba8cfe0a2c1bfe);$v841a2d689ad86bd1611447453c22c6fc = $this->getResponseBody($vd1fc8eaf36937be0c3ba8cfe0a2c1bfe);if (isset($v841a2d689ad86bd1611447453c22c6fc['error'])) {throw new Exception\BadRequest($v841a2d689ad86bd1611447453c22c6fc['error'], 2);}return $v841a2d689ad86bd1611447453c22c6fc;}protected function getServiceUrl() {return self::SERVICE_HOST;}private function getLogin() {return $this->login;}private function getPassword() {return $this->password;}}