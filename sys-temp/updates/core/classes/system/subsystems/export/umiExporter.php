<?php
 use UmiCms\Service;abstract class umiExporter implements iUmiExporter {const DEFAULT_EXPORT_LIMIT = 25;const SOURCE_ENCODING = 'utf-8';protected $type = '';protected $source_name = false;protected $completed = true;protected $serializeOptions = [];protected static $supportedEncodings = ['utf-8', 'windows-1251', 'cp1251'];protected $encoding = 'windows-1251';private static $exporters = [];abstract public function export($v6f017b01ac7b836b216574ebb3f5d73c, $vd1051e3a7d64c17a9cba77188937d2cd);final public static function get($v851f5ac9941d720844d143ed9cfcf60a) {$ved780287e302ec3b9fd3c5e78771919f = self::loadExporter($v851f5ac9941d720844d143ed9cfcf60a);if ($ved780287e302ec3b9fd3c5e78771919f instanceof self) {return $ved780287e302ec3b9fd3c5e78771919f;}throw new publicException("Can't load exporter for type \"{$v851f5ac9941d720844d143ed9cfcf60a}\"");}public function __construct($v599dcce2998a6b40b1e38e8c6006cb0a) {$this->type = $v599dcce2998a6b40b1e38e8c6006cb0a;}public function setOutputBuffer() {return Service::Response()    ->getCurrentBuffer();}public function getType() {return $this->type;}public function getFileExt() {return 'xml';}public function getSourceName() {return $this->source_name ?: $this->type;}public function setSourceName($v7c95caafbd5e4b5db3977617a0498de6 = false) {$this->source_name = $v7c95caafbd5e4b5db3977617a0498de6;}public function getIsCompleted() {return $this->completed;}public function setSerializeOptions(array $vef3e30e070f70244fd6578d88a6b77ac) {$this->serializeOptions = $vef3e30e070f70244fd6578d88a6b77ac;return $this;}public function setEncoding($v84bea1f0fd2ce16f7e562a9f06ef03d3) {if (in_array(mb_strtolower($v84bea1f0fd2ce16f7e562a9f06ef03d3), self::$supportedEncodings)) {$this->encoding = $v84bea1f0fd2ce16f7e562a9f06ef03d3;}else {throw new InvalidArgumentException("Encoding '${v84bea1f0fd2ce16f7e562a9f06ef03d3}' is not supported");}}protected function createXmlExporter($v7c95caafbd5e4b5db3977617a0498de6, $vaa9f73eea60a006820d0f8768bc8a3fc = false) {$ved780287e302ec3b9fd3c5e78771919f = new xmlExporter($v7c95caafbd5e4b5db3977617a0498de6, $vaa9f73eea60a006820d0f8768bc8a3fc);return $this->initXmlExporter($ved780287e302ec3b9fd3c5e78771919f);}protected function initXmlExporter(iXmlExporter $ved780287e302ec3b9fd3c5e78771919f) {foreach ($this->serializeOptions as $vb068931cc450442b63f5b3d276ea4297 => $v2063c1608d6e0baf80249c42e2be5804) {$ved780287e302ec3b9fd3c5e78771919f->setSerializeOption($vb068931cc450442b63f5b3d276ea4297, $v2063c1608d6e0baf80249c42e2be5804);}return $ved780287e302ec3b9fd3c5e78771919f;}private static function loadExporter($v851f5ac9941d720844d143ed9cfcf60a) {if (isset(self::$exporters[$v851f5ac9941d720844d143ed9cfcf60a])) {return self::$exporters[$v851f5ac9941d720844d143ed9cfcf60a];}self::$exporters[$v851f5ac9941d720844d143ed9cfcf60a] = false;$v6f66e878c62db60568a3487869695820 = "{$v851f5ac9941d720844d143ed9cfcf60a}Exporter";if (!class_exists($v6f66e878c62db60568a3487869695820)) {$v47826cacc65c665212b821e6ff80b9b0 = mainConfiguration::getInstance()      ->includeParam('system.kernel') . "subsystems/export/exporters/{$v6f66e878c62db60568a3487869695820}.php";if (!is_file($v47826cacc65c665212b821e6ff80b9b0)) {throw new publicException("Can't load exporter \"{$v47826cacc65c665212b821e6ff80b9b0}\" for \"{$v851f5ac9941d720844d143ed9cfcf60a}\" file type");}require $v47826cacc65c665212b821e6ff80b9b0;}if (!class_exists($v6f66e878c62db60568a3487869695820)) {throw new publicException("Exporter class \"{$v6f66e878c62db60568a3487869695820}\" not found");}$ved780287e302ec3b9fd3c5e78771919f = new $v6f66e878c62db60568a3487869695820($v851f5ac9941d720844d143ed9cfcf60a);if (!$ved780287e302ec3b9fd3c5e78771919f instanceof self) {throw new publicException("Exporter class \"{$v6f66e878c62db60568a3487869695820}\" should be instance of umiExporter");}self::$exporters[$v851f5ac9941d720844d143ed9cfcf60a] = $ved780287e302ec3b9fd3c5e78771919f;return $ved780287e302ec3b9fd3c5e78771919f;}protected function getLimit() {$v480d1b61a0432d1319f7504a3d7318dd = (int) mainConfiguration::getInstance()    ->get('modules', 'exchange.export.limit');if ($v480d1b61a0432d1319f7504a3d7318dd <= 0) {$v480d1b61a0432d1319f7504a3d7318dd = self::DEFAULT_EXPORT_LIMIT;}return $v480d1b61a0432d1319f7504a3d7318dd;}protected function getExportPath() {return SYS_TEMP_PATH . '/export/';}protected function getScenario() {$vb80bb7740288fda1f201890375a60c8f = isset($_REQUEST['param0']) ? $_REQUEST['param0'] : null;return umiObjectsCollection::getInstance()    ->getObject($vb80bb7740288fda1f201890375a60c8f);}protected function getUmiDumpTemplateEngine($v918d83c715c19dd93ff49f87e2fae0b3 = null) {$vf2ce473b36fb79a44028293890c685be = $this->getTemplatePath($v918d83c715c19dd93ff49f87e2fae0b3);if (!is_file($vf2ce473b36fb79a44028293890c685be)) {throw new publicException("Can't load template {$vf2ce473b36fb79a44028293890c685be}");}return umiTemplater::create('XSLT', $vf2ce473b36fb79a44028293890c685be);}protected function getTemplatePath($v918d83c715c19dd93ff49f87e2fae0b3 = null) {$v918d83c715c19dd93ff49f87e2fae0b3 = $v918d83c715c19dd93ff49f87e2fae0b3 ?: $this->getType();return CURRENT_WORKING_DIR . '/styles/common/xsl/export/' . $v918d83c715c19dd93ff49f87e2fae0b3 . '.xsl';}}